import { Dispatch, SetStateAction } from 'react';
declare global {
    interface WindowEventMap {
        'local-storage': CustomEvent;
    }
}
interface UseLocalStorageOptions<T, InitializeWithValue extends boolean | undefined> {
    serializer?: (value: T) => string;
    deserializer?: (value: string) => T;
    initializeWithValue: InitializeWithValue;
}
export declare function useLocalStorage<T>(key: string, initialValue: T | (() => T), options: UseLocalStorageOptions<T, false>): [T | undefined, Dispatch<SetStateAction<T>>];
export declare function useLocalStorage<T>(key: string, initialValue: T | (() => T), options?: Partial<UseLocalStorageOptions<T, boolean>>): [T, Dispatch<SetStateAction<T>>];
export {};
