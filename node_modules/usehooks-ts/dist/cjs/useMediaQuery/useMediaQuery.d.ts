type UseMediaQueryOptions<InitializeWithValue extends boolean | undefined> = {
    defaultValue?: boolean;
    initializeWithValue: InitializeWithValue;
};
/**
 * Custom hook for tracking the state of a media query.
 * @deprecated - this useMediaQuery's signature is deprecated, it now accepts an query parameter and an options object.
 * @param {string} query - The media query to track.
 * @param {?boolean} [defaultValue] - The default value to return if the hook is being run on the server (default is `false`).
 * @returns {boolean} The current state of the media query (true if the query matches, false otherwise).
 * @see [Documentation](https://usehooks-ts.com/react-hook/use-media-query)
 * @see [MDN Match Media](https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia)
 * @example
 * const isSmallScreen = useMediaQuery('(max-width: 600px)');
 * // Use `isSmallScreen` to conditionally apply styles or logic based on the screen size.
 */
export declare function useMediaQuery(query: string, defaultValue: boolean): boolean;
export declare function useMediaQuery(query: string, options: UseMediaQueryOptions<false>): boolean | undefined;
export declare function useMediaQuery(query: string, options?: Partial<UseMediaQueryOptions<true>>): boolean;
export {};
