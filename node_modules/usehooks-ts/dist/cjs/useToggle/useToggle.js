"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useToggle = void 0;
var react_1 = require("react");
/**
 * Custom hook for managing a boolean toggle state in React components.
 * @param {boolean} [defaultValue] - The initial value for the toggle state.
 * @returns {[boolean, () => void, Dispatch<SetStateAction<boolean>>]} A tuple containing the current state,
 * a function to toggle the state, and a function to set the state explicitly.
 * @see [Documentation](https://usehooks-ts.com/react-hook/use-toggle)
 * @example
 * // Usage of useToggle hook
 * const [isToggled, toggle, setToggle] = useToggle(); // Initial value is false
 * // OR
 * const [isToggled, toggle, setToggle] = useToggle(true); // Initial value is true
 * // Use isToggled in your component, toggle to switch the state, setToggle to set the state explicitly.
 */
function useToggle(defaultValue) {
    var _a = (0, react_1.useState)(!!defaultValue), value = _a[0], setValue = _a[1];
    var toggle = (0, react_1.useCallback)(function () {
        setValue(function (x) { return !x; });
    }, []);
    return [value, toggle, setValue];
}
exports.useToggle = useToggle;
