import { Dispatch, SetStateAction } from 'react';
interface Helpers {
    goToNextStep: () => void;
    goToPrevStep: () => void;
    reset: () => void;
    canGoToNextStep: boolean;
    canGoToPrevStep: boolean;
    setStep: Dispatch<SetStateAction<number>>;
}
/**
 * Custom hook for managing and navigating between steps in a multi-step process.
 * @param {number} maxStep - The maximum step in the process.
 * @returns {[number, Helpers]} An tuple containing the current step and helper functions for navigating steps.
 * @see [Documentation](https://usehooks-ts.com/react-hook/use-step)
 * @example
 * const [currentStep, { goToNextStep, goToPrevStep, reset, canGoToNextStep, canGoToPrevStep, setStep }] = useStep(3);
 * // Access and use the current step and provided helper functions.
 */
export declare function useStep(maxStep: number): [number, Helpers];
export {};
