"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useUpdateEffect = void 0;
var react_1 = require("react");
var useIsFirstRender_1 = require("../useIsFirstRender");
/**
 * Custom hook that runs an effect only on updates (not on the initial render).
 * @param {EffectCallback} effect - The function to run as the effect.
 * @param {DependencyList} [deps] - An optional array of dependencies for the effect.
 * @see [Documentation](https://usehooks-ts.com/react-hook/use-update-effect)
 * @example
 * // Usage of useUpdateEffect hook
 * useUpdateEffect(() => {
 *   // Effect code to run on updates
 *   console.log('Component updated!');
 * }, [dependency1, dependency2]);
 */
function useUpdateEffect(effect, deps) {
    var isFirst = (0, useIsFirstRender_1.useIsFirstRender)();
    (0, react_1.useEffect)(function () {
        if (!isFirst) {
            return effect();
        }
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, deps);
}
exports.useUpdateEffect = useUpdateEffect;
