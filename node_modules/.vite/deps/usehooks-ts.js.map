{
  "version": 3,
  "sources": ["../../lodash.debounce/index.js", "../../usehooks-ts/dist/esm/useBoolean/useBoolean.js", "../../usehooks-ts/dist/esm/useEventListener/useEventListener.js", "../../usehooks-ts/dist/esm/useIsomorphicLayoutEffect/useIsomorphicLayoutEffect.js", "../../usehooks-ts/dist/esm/useClickAnyWhere/useClickAnyWhere.js", "../../usehooks-ts/dist/esm/useCopyToClipboard/useCopyToClipboard.js", "../../usehooks-ts/dist/esm/useCountdown/useCountdown.js", "../../usehooks-ts/dist/esm/useCounter/useCounter.js", "../../usehooks-ts/dist/esm/useInterval/useInterval.js", "../../usehooks-ts/dist/esm/useLocalStorage/useLocalStorage.js", "../../usehooks-ts/dist/esm/useEventCallback/useEventCallback.js", "../../usehooks-ts/dist/esm/useMediaQuery/useMediaQuery.js", "../../usehooks-ts/dist/esm/useUpdateEffect/useUpdateEffect.js", "../../usehooks-ts/dist/esm/useIsFirstRender/useIsFirstRender.js", "../../usehooks-ts/dist/esm/useDarkMode/useDarkMode.js", "../../usehooks-ts/dist/esm/useDebounce/useDebounce.js", "../../usehooks-ts/dist/esm/useDebounceCallback/useDebounceCallback.js", "../../usehooks-ts/dist/esm/useUnmount/useUnmount.js", "../../usehooks-ts/dist/esm/useDebounceValue/useDebounceValue.js", "../../usehooks-ts/dist/esm/useDocumentTitle/useDocumentTitle.js", "../../usehooks-ts/dist/esm/useEffectOnce/useEffectOnce.js", "../../usehooks-ts/dist/esm/useElementSize/useElementSize.js", "../../usehooks-ts/dist/esm/useFetch/useFetch.js", "../../usehooks-ts/dist/esm/useHover/useHover.js", "../../usehooks-ts/dist/esm/useImageOnLoad/useImageOnLoad.js", "../../usehooks-ts/dist/esm/useIntersectionObserver/useIntersectionObserver.js", "../../usehooks-ts/dist/esm/useIsClient/useIsClient.js", "../../usehooks-ts/dist/esm/useIsMounted/useIsMounted.js", "../../usehooks-ts/dist/esm/useLockedBody/useLockedBody.js", "../../usehooks-ts/dist/esm/useMap/useMap.js", "../../usehooks-ts/dist/esm/useOnClickOutside/useOnClickOutside.js", "../../usehooks-ts/dist/esm/useReadLocalStorage/useReadLocalStorage.js", "../../usehooks-ts/dist/esm/useScreen/useScreen.js", "../../usehooks-ts/dist/esm/useScript/useScript.js", "../../usehooks-ts/dist/esm/useSessionStorage/useSessionStorage.js", "../../usehooks-ts/dist/esm/useSsr/useSsr.js", "../../usehooks-ts/dist/esm/useStep/useStep.js", "../../usehooks-ts/dist/esm/useTernaryDarkMode/useTernaryDarkMode.js", "../../usehooks-ts/dist/esm/useTimeout/useTimeout.js", "../../usehooks-ts/dist/esm/useToggle/useToggle.js", "../../usehooks-ts/dist/esm/useWindowSize/useWindowSize.js"],
  "sourcesContent": ["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n", "import { useCallback, useState } from 'react';\n/**\n * Custom hook for handling boolean state with useful utility functions.\n * @param {boolean} [defaultValue] - The initial value for the boolean state (default is `false`).\n * @returns {UseBooleanOutput} An object containing the boolean state value and utility functions to manipulate the state.\n * @property {boolean} value - The current boolean state value.\n * @property {Function} setValue - Function to set the boolean state directly.\n * @property {Function} setTrue - Function to set the boolean state to `true`.\n * @property {Function} setFalse - Function to set the boolean state to `false`.\n * @property {Function} toggle - Function to toggle the boolean state.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-boolean)\n * @example\n * const { value, setTrue, setFalse, toggle } = useBoolean(true);\n *\n * console.log(value); // true\n * setFalse();\n * console.log(value); // false\n * toggle();\n * console.log(value); // true\n */\nexport function useBoolean(defaultValue) {\n    const [value, setValue] = useState(!!defaultValue);\n    const setTrue = useCallback(() => {\n        setValue(true);\n    }, []);\n    const setFalse = useCallback(() => {\n        setValue(false);\n    }, []);\n    const toggle = useCallback(() => {\n        setValue(x => !x);\n    }, []);\n    return { value, setValue, setTrue, setFalse, toggle };\n}\n", "import { useEffect, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect/useIsomorphicLayoutEffect';\n/**\n * Custom hook for attaching event listeners to DOM elements, the window, or media query lists.\n * @template KW - The type of event for window events.\n * @template KH - The type of event for HTML element events.\n * @template KM - The type of event for media query list events.\n * @template T - The type of the DOM element (default is `HTMLElement`).\n * @param {KW | KH | KM} eventName - The name of the event to listen for.\n * @param {(event: WindowEventMap[KW] | HTMLElementEventMap[KH] | MediaQueryListEventMap[KM] | Event) => void} handler - The event handler function.\n * @param {RefObject<T>} [element] - The DOM element or media query list to attach the event listener to (optional).\n * @param {boolean | AddEventListenerOptions} [options] - An options object that specifies characteristics about the event listener (optional).\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-event-listener)\n * @example\n * // Example 1: Attach a window event listener\n * useEventListener('resize', handleResize);\n * @example\n * // Example 2: Attach a document event listener with options\n * const elementRef = useRef(document);\n * useEventListener('click', handleClick, elementRef, { capture: true });\n * @example\n * // Example 3: Attach an element event listener\n * const buttonRef = useRef<HTMLButtonElement>(null);\n * useEventListener('click', handleButtonClick, buttonRef);\n */\nfunction useEventListener(eventName, handler, element, options) {\n    // Create a ref that stores handler\n    const savedHandler = useRef(handler);\n    useIsomorphicLayoutEffect(() => {\n        savedHandler.current = handler;\n    }, [handler]);\n    useEffect(() => {\n        var _a;\n        // Define the listening target\n        const targetElement = (_a = element === null || element === void 0 ? void 0 : element.current) !== null && _a !== void 0 ? _a : window;\n        if (!(targetElement && targetElement.addEventListener))\n            return;\n        // Create event listener that calls handler function stored in ref\n        const listener = event => {\n            savedHandler.current(event);\n        };\n        targetElement.addEventListener(eventName, listener, options);\n        // Remove event listener on cleanup\n        return () => {\n            targetElement.removeEventListener(eventName, listener, options);\n        };\n    }, [eventName, element, options]);\n}\nexport { useEventListener };\n", "import { useEffect, useLayoutEffect } from 'react';\n/**\n * Custom hook for using either `useLayoutEffect` or `useEffect` based on the environment (client-side or server-side).\n * @param {Function} effect - The effect function to be executed.\n * @param {Array<any>} [dependencies] - An array of dependencies for the effect (optional).\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-isomorphic-layout-effect)\n * @example\n * useIsomorphicLayoutEffect(() => {\n *   // Code to be executed during the layout phase on the client side\n * }, [dependency1, dependency2]);\n */\nexport const useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n", "import { useEventListener } from '../useEventListener';\n/**\n * Custom hook for handling click events anywhere on the document.\n * @param {Function} handler - The function to be called when a click event is detected anywhere on the document.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-click-any-where)\n * @example\n * // Usage of useClickAnywhere hook\n * const handleClick = (event) => {\n *   console.log('Document clicked!', event);\n * };\n *\n * // Attach click event handler to document\n * useClickAnywhere(handleClick);\n */\nexport function useClickAnyWhere(handler) {\n    useEventListener('click', event => {\n        handler(event);\n    });\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { useCallback, useState } from 'react';\n/**\n * Custom hook for copying text to the clipboard.\n * @returns {[CopiedValue, CopyFn]} An tuple containing the copied text and a function to copy text to the clipboard.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-copy-to-clipboard)\n * @see [MDN Clipboard API](https://developer.mozilla.org/en-US/docs/Web/API/Clipboard_API)\n * @example\n * // Usage of useCopyToClipboard hook\n * const [copiedText, copyToClipboard] = useCopyToClipboard();\n * const textToCopy = 'Hello, world!';\n *\n * // Attempt to copy text to the clipboard\n * copyToClipboard(textToCopy)\n *   .then(success => {\n *     if (success) {\n *       console.log(`Text \"${textToCopy}\" copied to clipboard successfully.`);\n *     } else {\n *       console.error('Failed to copy text to clipboard.');\n *     }\n *   });\n */\nexport function useCopyToClipboard() {\n    const [copiedText, setCopiedText] = useState(null);\n    const copy = useCallback((text) => __awaiter(this, void 0, void 0, function* () {\n        if (!(navigator === null || navigator === void 0 ? void 0 : navigator.clipboard)) {\n            console.warn('Clipboard not supported');\n            return false;\n        }\n        // Try to save to clipboard then save it in the state if worked\n        try {\n            yield navigator.clipboard.writeText(text);\n            setCopiedText(text);\n            return true;\n        }\n        catch (error) {\n            console.warn('Copy failed', error);\n            setCopiedText(null);\n            return false;\n        }\n    }), []);\n    return [copiedText, copy];\n}\n", "import { useCallback } from 'react';\nimport { useBoolean } from '../useBoolean';\nimport { useCounter } from '../useCounter';\nimport { useInterval } from '../useInterval';\n/**\n * A hook to manage countdown\n * @param  {CountdownOptions | LegacyCountdownOptions} countdownOptions the countdown's options.\n * @returns {[number, CountdownControllers | LegacyCountdownControllers]} An array containing the countdown's count and its controllers.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-countdown)\n */\nexport function useCountdown(countdownOptions) {\n    /**\n     * Use to determine the the API call is a deprecated version.\n     */\n    let isDeprecated = false;\n    let countStart, intervalMs, isIncrement, countStop;\n    if ('seconds' in countdownOptions) {\n        console.warn('[useCountdown:DEPRECATED] new interface is already available (see https://usehooks-ts.com/react-hook/use-countdown), the old version will retire on usehooks-ts@3.');\n        isDeprecated = true;\n        countStart = countdownOptions.seconds;\n        intervalMs = countdownOptions.interval;\n        isIncrement = countdownOptions.isIncrement;\n    }\n    else {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi, no-extra-semi\n        ;\n        ({ countStart, intervalMs, isIncrement, countStop } = countdownOptions);\n    }\n    // default values\n    intervalMs = intervalMs !== null && intervalMs !== void 0 ? intervalMs : 1000;\n    isIncrement = isIncrement !== null && isIncrement !== void 0 ? isIncrement : false;\n    countStop = countStop !== null && countStop !== void 0 ? countStop : 0;\n    const { count, increment, decrement, reset: resetCounter, } = useCounter(countStart);\n    /**\n     * Note: used to control the useInterval\n     * running: If true, the interval is running\n     * start: Should set running true to trigger interval\n     * stop: Should set running false to remove interval\n     */\n    const { value: isCountdownRunning, setTrue: startCountdown, setFalse: stopCountdown, } = useBoolean(false);\n    /**\n     * Will set running false and reset the seconds to initial value\n     */\n    const resetCountdown = () => {\n        stopCountdown();\n        resetCounter();\n    };\n    const countdownCallback = useCallback(() => {\n        if (count === countStop) {\n            stopCountdown();\n            return;\n        }\n        if (isIncrement) {\n            increment();\n        }\n        else {\n            decrement();\n        }\n    }, [count, countStop, decrement, increment, isIncrement, stopCountdown]);\n    useInterval(countdownCallback, isCountdownRunning ? intervalMs : null);\n    return isDeprecated\n        ? [\n            count,\n            {\n                start: startCountdown,\n                stop: stopCountdown,\n                reset: resetCountdown,\n            },\n        ]\n        : [\n            count,\n            {\n                startCountdown,\n                stopCountdown,\n                resetCountdown,\n            },\n        ];\n}\n", "import { useState } from 'react';\n/**\n * Custom hook that manages a counter with increment, decrement, reset, and setCount functionalities.\n * @param {number} [initialValue] - The initial value for the counter.\n * @returns {object} An object containing the current count and functions to interact with the counter.\n * @property {number} count - The current count value.\n * @property {Function} increment - Increments the counter by 1.\n * @property {Function} decrement - Decrements the counter by 1.\n * @property {Function} reset - Resets the counter to its initial value.\n * @property {Function} setCount - Function to set a specific value to the counter.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-counter)\n * @example\n * // Usage of useCounter hook\n * const { count, increment, decrement, reset, setCount } = useCounter(5);\n * console.log(`Current count: ${count}`);\n * increment(); // Increases count by 1\n * decrement(); // Decreases count by 1\n * reset(); // Resets count to its initial value\n * setCount(10); // Sets count to 10\n */\nexport function useCounter(initialValue) {\n    const [count, setCount] = useState(initialValue !== null && initialValue !== void 0 ? initialValue : 0);\n    const increment = () => {\n        setCount(x => x + 1);\n    };\n    const decrement = () => {\n        setCount(x => x - 1);\n    };\n    const reset = () => {\n        setCount(initialValue !== null && initialValue !== void 0 ? initialValue : 0);\n    };\n    return {\n        count,\n        increment,\n        decrement,\n        reset,\n        setCount,\n    };\n}\n", "import { useEffect, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\n/**\n * Custom hook for creating an interval that invokes a callback function at a specified delay.\n * @param {() => void} callback - The function to be invoked at each interval.\n * @param {number | null} delay - The time, in milliseconds, between each invocation of the callback. Use `null` to clear the interval.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-interval)\n * @see [MDN setInterval](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setInterval)\n * @example\n * const handleInterval = () => {\n *   // Code to be executed at each interval\n * };\n * useInterval(handleInterval, 1000);\n */\nexport function useInterval(callback, delay) {\n    const savedCallback = useRef(callback);\n    // Remember the latest callback if it changes.\n    useIsomorphicLayoutEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n    // Set up the interval.\n    useEffect(() => {\n        // Don't schedule if no delay is specified.\n        // Note: 0 is a valid value for delay.\n        if (delay === null) {\n            return;\n        }\n        const id = setInterval(() => {\n            savedCallback.current();\n        }, delay);\n        return () => {\n            clearInterval(id);\n        };\n    }, [delay]);\n}\n", "import { useCallback, useEffect, useState, } from 'react';\nimport { useEventCallback } from '../useEventCallback';\nimport { useEventListener } from '../useEventListener';\nconst IS_SERVER = typeof window === 'undefined';\n/**\n * Custom hook for using local storage to persist state across page reloads.\n * @template T - The type of the state to be stored in local storage.\n * @param {string} key - The key under which the value will be stored in local storage.\n * @param {T | (() => T)} initialValue - The initial value of the state or a function that returns the initial value.\n * @param {UseLocalStorageOptions<T>} [options] - Options for customizing the behavior of serialization and deserialization (optional).\n * @param {?boolean} [options.initializeWithValue] - If `true` (default), the hook will initialize reading the local storage. In SSR, you should set it to `false`, returning `undefined` initially.\n * @param {?((value: T) => string)} [options.serializer] - A function to serialize the value before storing it.\n * @param {?((value: string) => T)} [options.deserializer] - A function to deserialize the stored value.\n * @returns {[T, Dispatch<SetStateAction<T>>]} A tuple containing the stored value and a function to set the value.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-local-storage)\n * @see [MDN Local Storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage)\n * @example\n * const [count, setCount] = useLocalStorage('count', 0);\n * // Access the `count` value and the `setCount` function to update it.\n */\nexport function useLocalStorage(key, initialValue, options = {}) {\n    let { initializeWithValue = true } = options;\n    if (IS_SERVER) {\n        initializeWithValue = false;\n    }\n    const serializer = useCallback(value => {\n        if (options.serializer) {\n            return options.serializer(value);\n        }\n        return JSON.stringify(value);\n    }, [options]);\n    const deserializer = useCallback(value => {\n        if (options.deserializer) {\n            return options.deserializer(value);\n        }\n        // Support 'undefined' as a value\n        if (value === 'undefined') {\n            return undefined;\n        }\n        const defaultValue = initialValue instanceof Function ? initialValue() : initialValue;\n        let parsed;\n        try {\n            parsed = JSON.parse(value);\n        }\n        catch (error) {\n            console.error('Error parsing JSON:', error);\n            return defaultValue; // Return initialValue if parsing fails\n        }\n        return parsed;\n    }, [options, initialValue]);\n    // Get from local storage then\n    // parse stored json or return initialValue\n    const readValue = useCallback(() => {\n        const initialValueToUse = initialValue instanceof Function ? initialValue() : initialValue;\n        // Prevent build error \"window is undefined\" but keeps working\n        if (IS_SERVER) {\n            return initialValueToUse;\n        }\n        try {\n            const raw = window.localStorage.getItem(key);\n            return raw ? deserializer(raw) : initialValueToUse;\n        }\n        catch (error) {\n            console.warn(`Error reading localStorage key “${key}”:`, error);\n            return initialValueToUse;\n        }\n    }, [initialValue, key, deserializer]);\n    const [storedValue, setStoredValue] = useState(() => {\n        if (initializeWithValue) {\n            return readValue();\n        }\n        return undefined;\n    });\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = useEventCallback(value => {\n        // Prevent build error \"window is undefined\" but keeps working\n        if (IS_SERVER) {\n            console.warn(`Tried setting localStorage key “${key}” even though environment is not a client`);\n        }\n        try {\n            // Allow value to be a function so we have the same API as useState\n            const newValue = value instanceof Function ? value(readValue()) : value;\n            // Save to local storage\n            window.localStorage.setItem(key, serializer(newValue));\n            // Save state\n            setStoredValue(newValue);\n            // We dispatch a custom event so every similar useLocalStorage hook is notified\n            window.dispatchEvent(new StorageEvent('local-storage', { key }));\n        }\n        catch (error) {\n            console.warn(`Error setting localStorage key “${key}”:`, error);\n        }\n    });\n    useEffect(() => {\n        setStoredValue(readValue());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [key]);\n    const handleStorageChange = useCallback((event) => {\n        if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [key, readValue]);\n    // this only works for other documents, not the current one\n    useEventListener('storage', handleStorageChange);\n    // this is a custom event, triggered in writeValueToLocalStorage\n    // See: useLocalStorage()\n    useEventListener('local-storage', handleStorageChange);\n    return [storedValue, setValue];\n}\n", "import { useCallback, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\n/**\n * A hook for creating a memoized event callback.\n * @template Args - An array of argument types for the event callback.\n * @template R - The return type of the event callback.\n * @param {(...args: Args) => R} fn - The callback function.\n * @returns {(...args: Args) => R} A memoized event callback function.\n * @example\n * const handleClick = useEventCallback((event) => {\n *   // Handle the event here\n * });\n */\nexport function useEventCallback(fn) {\n    const ref = useRef(() => {\n        throw new Error('Cannot call an event handler while rendering.');\n    });\n    useIsomorphicLayoutEffect(() => {\n        ref.current = fn;\n    }, [fn]);\n    return useCallback((...args) => ref.current(...args), [ref]);\n}\n", "import { useState } from 'react';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\nconst IS_SERVER = typeof window === 'undefined';\n/**\n * Custom hook for tracking the state of a media query.\n * @param {string} query - The media query to track.\n * @param {boolean | ?UseMediaQueryOptions} [options] - The default value to return if the hook is being run on the server (default is `false`).\n * @param {?boolean} [options.defaultValue] - The default value to return if the hook is being run on the server (default is `false`).\n * @param {?boolean} [options.initializeWithValue] - If `true` (default), the hook will initialize reading the media query. In SSR, you should set it to `false`, returning `undefined`  or `options.defaultValue` initially.\n * @returns {boolean | undefined} The current state of the media query (true if the query matches, false otherwise).\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-media-query)\n * @see [MDN Match Media](https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia)\n * @example\n * const isSmallScreen = useMediaQuery('(max-width: 600px)');\n * // Use `isSmallScreen` to conditionally apply styles or logic based on the screen size.\n */\nexport function useMediaQuery(query, options) {\n    var _a, _b;\n    // TODO: Refactor this code after the deprecated signature has been removed.\n    const defaultValue = typeof options === 'boolean' ? options : (_a = options === null || options === void 0 ? void 0 : options.defaultValue) !== null && _a !== void 0 ? _a : false;\n    let initializeWithValue = typeof options === 'boolean'\n        ? undefined\n        : (_b = options === null || options === void 0 ? void 0 : options.initializeWithValue) !== null && _b !== void 0 ? _b : undefined;\n    if (IS_SERVER) {\n        initializeWithValue = false;\n    }\n    const [matches, setMatches] = useState(() => {\n        if (initializeWithValue) {\n            return getMatches(query);\n        }\n        return defaultValue;\n    });\n    const getMatches = (query) => {\n        if (typeof window !== 'undefined') {\n            return window.matchMedia(query).matches;\n        }\n        return defaultValue;\n    };\n    /** Handles the change event of the media query. */\n    function handleChange() {\n        setMatches(getMatches(query));\n    }\n    useIsomorphicLayoutEffect(() => {\n        const matchMedia = window.matchMedia(query);\n        // Triggered at the first client-side load and if query changes\n        handleChange();\n        // Use deprecated `addListener` and `removeListener` to support Safari < 14 (#135)\n        if (matchMedia.addListener) {\n            matchMedia.addListener(handleChange);\n        }\n        else {\n            matchMedia.addEventListener('change', handleChange);\n        }\n        return () => {\n            if (matchMedia.removeListener) {\n                matchMedia.removeListener(handleChange);\n            }\n            else {\n                matchMedia.removeEventListener('change', handleChange);\n            }\n        };\n    }, [query]);\n    return matches;\n}\n", "import { useEffect } from 'react';\nimport { useIsFirstRender } from '../useIsFirstRender';\n/**\n * Custom hook that runs an effect only on updates (not on the initial render).\n * @param {EffectCallback} effect - The function to run as the effect.\n * @param {DependencyList} [deps] - An optional array of dependencies for the effect.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-update-effect)\n * @example\n * // Usage of useUpdateEffect hook\n * useUpdateEffect(() => {\n *   // Effect code to run on updates\n *   console.log('Component updated!');\n * }, [dependency1, dependency2]);\n */\nexport function useUpdateEffect(effect, deps) {\n    const isFirst = useIsFirstRender();\n    useEffect(() => {\n        if (!isFirst) {\n            return effect();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, deps);\n}\n", "import { useRef } from 'react';\n/**\n * Custom hook for determining if the component is rendering for the first time.\n * @returns {boolean} A boolean value indicating whether the component is rendering for the first time.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-is-first-render)\n * @example\n * const isFirstRender = useIsFirstRender();\n * // Use isFirstRender to conditionally execute code only on the initial render.\n */\nexport function useIsFirstRender() {\n    const isFirst = useRef(true);\n    if (isFirst.current) {\n        isFirst.current = false;\n        return true;\n    }\n    return isFirst.current;\n}\n", "import { useLocalStorage } from '../useLocalStorage';\nimport { useMediaQuery } from '../useMediaQuery';\nimport { useUpdateEffect } from '../useUpdateEffect';\nconst COLOR_SCHEME_QUERY = '(prefers-color-scheme: dark)';\nconst LOCAL_STORAGE_KEY = 'usehooks-ts-dark-mode';\n/**\n * Custom hook that returns the current state of the dark mode.\n * @param  {?boolean | ?DarkModeOptions} [options] - the initial value of the dark mode, default `false`.\n * @param  {?boolean} [options.defaultValue] - the initial value of the dark mode, default `false`.\n * @param  {?string} [options.localStorageKey] - the key to use in the local storage, default `'usehooks-ts-dark-mode'`.\n * @param  {?boolean} [options.initializeWithValue] - if `true` (default), the hook will initialize reading `localStorage`. In SSR, you should set it to `false`, returning `undefined` or the `defaultValue` initially.\n * @param  {?string} [localStorageKeyProps] the key to use in the local storage, default `'usehooks-ts-dark-mode'`.\n * @returns {DarkModeOutput} An object containing the dark mode's state and its controllers.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-dark-mode)\n * @example\n * const { isDarkMode, toggle, enable, disable, set } = useDarkMode({ defaultValue: true });\n */\nexport function useDarkMode(options, localStorageKeyProps = LOCAL_STORAGE_KEY) {\n    var _a, _b, _c, _d;\n    // TODO: Refactor this code after the deprecated signature has been removed.\n    const defaultValue = typeof options === 'boolean' ? options : (_a = options === null || options === void 0 ? void 0 : options.defaultValue) !== null && _a !== void 0 ? _a : false;\n    const localStorageKey = typeof options === 'boolean'\n        ? localStorageKeyProps !== null && localStorageKeyProps !== void 0 ? localStorageKeyProps : LOCAL_STORAGE_KEY\n        : (_b = options === null || options === void 0 ? void 0 : options.localStorageKey) !== null && _b !== void 0 ? _b : LOCAL_STORAGE_KEY;\n    const initializeWithValue = typeof options === 'boolean'\n        ? undefined\n        : (_c = options === null || options === void 0 ? void 0 : options.initializeWithValue) !== null && _c !== void 0 ? _c : undefined;\n    const isDarkOS = useMediaQuery(COLOR_SCHEME_QUERY);\n    const [isDarkMode, setDarkMode] = useLocalStorage(localStorageKey, (_d = defaultValue !== null && defaultValue !== void 0 ? defaultValue : isDarkOS) !== null && _d !== void 0 ? _d : false, { initializeWithValue });\n    // Update darkMode if os prefers changes\n    useUpdateEffect(() => {\n        setDarkMode(isDarkOS);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isDarkOS]);\n    return {\n        isDarkMode,\n        toggle: () => {\n            setDarkMode(prev => !prev);\n        },\n        enable: () => {\n            setDarkMode(true);\n        },\n        disable: () => {\n            setDarkMode(false);\n        },\n        set: value => {\n            setDarkMode(value);\n        },\n    };\n}\n", "import { useEffect, useState } from 'react';\n/**\n * Custom hook for debouncing a value.\n * @template T - The type of the value to be debounced.\n * @param {T} value - The value to be debounced.\n * @param {number} [delay] - The delay in milliseconds for debouncing. Defaults to 500 milliseconds.\n * @returns {T} The debounced value.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-debounce)\n * @example\n * const debouncedSearchTerm = useDebounce(searchTerm, 300);\n * @deprecated useDebounce uses a naive setTimeout implementation and will be removed.\n * For a more robust implementation, use useDebounceCallback for functions and useDebounceValue for primitive values instead. The new implementation uses lodash.debounce under the hood.\n */\nexport function useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n    useEffect(() => {\n        const timer = setTimeout(() => {\n            setDebouncedValue(value);\n        }, delay !== null && delay !== void 0 ? delay : 500);\n        return () => {\n            clearTimeout(timer);\n        };\n    }, [value, delay]);\n    return debouncedValue;\n}\n", "import { useEffect, useMemo, useRef } from 'react';\nimport debounce from 'lodash.debounce';\nimport { useUnmount } from '../useUnmount';\n/**\n * Hook to create a debounced version of a callback function.\n * @template T - Type of the original callback function.\n * @param {T} func - The callback function to be debounced.\n * @param {number} delay - The delay in milliseconds before the callback is invoked (default is `500` milliseconds).\n * @param {DebounceOptions} [options] - Options to control the behavior of the debounced function.\n * @returns {DebouncedState<T>} A debounced version of the original callback along with control functions.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-debounce-callback)\n * @example\n * const debouncedCallback = useDebounceCallback(\n *   (searchTerm) => {\n *     // Perform search after user stops typing for 500 milliseconds\n *     searchApi(searchTerm);\n *   },\n *   500\n * );\n *\n * // Later in the component\n * debouncedCallback('react hooks'); // Will invoke the callback after 500 milliseconds of inactivity.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function useDebounceCallback(func, delay = 500, options) {\n    const debouncedFunc = useRef();\n    useUnmount(() => {\n        if (debouncedFunc.current) {\n            debouncedFunc.current.cancel();\n        }\n    });\n    const debounced = useMemo(() => {\n        const debouncedFuncInstance = debounce(func, delay, options);\n        const wrappedFunc = (...args) => {\n            return debouncedFuncInstance(...args);\n        };\n        wrappedFunc.cancel = () => {\n            debouncedFuncInstance.cancel();\n        };\n        wrappedFunc.isPending = () => {\n            return !!debouncedFunc.current;\n        };\n        wrappedFunc.flush = () => {\n            return debouncedFuncInstance.flush();\n        };\n        return wrappedFunc;\n    }, [func, delay, options]);\n    // Update the debounced function ref whenever func, wait, or options change\n    useEffect(() => {\n        debouncedFunc.current = debounce(func, delay, options);\n    }, [func, delay, options]);\n    return debounced;\n}\n", "import { useEffect, useRef } from 'react';\n/**\n * Hook that runs a cleanup function when the component is unmounted.\n * @param {() => void} func - The cleanup function to be executed on unmount.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-unmount)\n * @example\n * // Usage in a functional component\n * useUnmount(() => {\n *   // Cleanup logic here\n * });\n */\nexport function useUnmount(func) {\n    const funcRef = useRef(func);\n    funcRef.current = func;\n    useEffect(() => () => {\n        funcRef.current();\n    }, []);\n}\n", "import { useRef, useState } from 'react';\nimport { useDebounceCallback } from '../useDebounceCallback';\n/**\n * Returns a debounced version of the provided value, along with a function to update it.\n * @template T - The type of the value.\n * @param {T | (() => T)} initialValue - The value to be debounced.\n * @param {number} delay - The delay in milliseconds before the value is updated (default is 500ms).\n * @param {object} [options] - Optional configurations for the debouncing behavior.\n * @param {?boolean} [options.leading] - Determines if the debounced function should be invoked on the leading edge of the timeout (default to false).\n * @param {?boolean} [options.trailing] - Determines if the debounced function should be invoked on the trailing edge of the timeout (default to false).\n * @param {?(left: T, right: T) => boolean} [options.equalityFn] - A function to determine if the value has changed. Defaults to a function that checks if the value is strictly equal to the previous value.\n * @param {?number} [options.maxWait] - The maximum time the debounced function is allowed to be delayed before it's invoked.\n * @returns {[T, DebouncedState<(value: T) => void>]} An array containing the debounced value and the function to update it.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-debounce-value)\n * @example\n * const [debouncedValue, updateDebouncedValue] = useDebounceValue(inputValue, 500, { leading: true });\n */\nexport function useDebounceValue(initialValue, delay, options) {\n    var _a;\n    const eq = (_a = options === null || options === void 0 ? void 0 : options.equalityFn) !== null && _a !== void 0 ? _a : ((left, right) => left === right);\n    const unwrappedInitialValue = initialValue instanceof Function ? initialValue() : initialValue;\n    const [debouncedValue, setDebouncedValue] = useState(unwrappedInitialValue);\n    const previousValueRef = useRef(unwrappedInitialValue);\n    const updateDebouncedValue = useDebounceCallback(setDebouncedValue, delay, options);\n    // Update the debounced value if the initial value changes\n    if (!eq(previousValueRef.current, unwrappedInitialValue)) {\n        updateDebouncedValue(unwrappedInitialValue);\n        previousValueRef.current = unwrappedInitialValue;\n    }\n    return [debouncedValue, updateDebouncedValue];\n}\n", "import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\nimport { useUnmount } from '../useUnmount';\n/**\n * A hook to set the document title.\n * @param {string} title - The title to set.\n * @param {?Options} [options] - The options.\n * @param {?boolean} [options.preserveTitleOnUnmount] - Whether to keep the title after unmounting the component (default is `true`).\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-document-title)\n * @example\n * useDocumentTitle('My new title');\n */\nexport function useDocumentTitle(title, options = {}) {\n    const { preserveTitleOnUnmount = true } = options;\n    const defaultTitle = useRef(null);\n    useIsomorphicLayoutEffect(() => {\n        defaultTitle.current = window.document.title;\n    }, []);\n    useIsomorphicLayoutEffect(() => {\n        window.document.title = title;\n    }, [title]);\n    useUnmount(() => {\n        if (!preserveTitleOnUnmount && defaultTitle.current) {\n            window.document.title = defaultTitle.current;\n        }\n    });\n}\n", "import { useEffect } from 'react';\n/**\n * A hook that runs an effect only once (at mount).\n * @param {EffectCallback} effect - The effect to run.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-effect-once)\n * @example\n * useEffectOnce(() => {\n *   console.log('Hello World');\n * });\n */\nexport function useEffectOnce(effect) {\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    useEffect(effect, []);\n}\n", "import { useCallback, useState } from 'react';\nimport { useEventListener } from '../useEventListener';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\nconst IS_SERVER = typeof window === 'undefined';\n/**\n * A hook for tracking the size of a DOM element.\n * @template T - The type of the DOM element. Defaults to `HTMLDivElement`.\n * @param {?UseElementSizeOptions} [options] - The options for customizing the behavior of the hook (optional).\n * @param {?boolean} [options.initializeWithValue] - If `true` (default), the hook will initialize reading the element's size. In SSR, you should set it to `false`, returning `{ width: 0, height: 0 }` initially.\n * @returns {[ (node: T | null) => void, Size ]} A tuple containing a ref-setting function and the size of the element.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-element-size)\n * @example\n * const [ref, size] = useElementSize();\n *\n * return (\n *   <div ref={ref}>\n *     My size is {size.width}x{size.height}\n *   </div>\n * );\n */\nexport function useElementSize(options = {}) {\n    let { initializeWithValue = true } = options;\n    if (IS_SERVER) {\n        initializeWithValue = false;\n    }\n    // Mutable values like 'ref.current' aren't valid dependencies\n    // because mutating them doesn't re-render the component.\n    // Instead, we use a state as a ref to be reactive.\n    const [ref, setRef] = useState(null);\n    const readValue = useCallback(() => {\n        var _a, _b;\n        return {\n            width: (_a = ref === null || ref === void 0 ? void 0 : ref.offsetWidth) !== null && _a !== void 0 ? _a : 0,\n            height: (_b = ref === null || ref === void 0 ? void 0 : ref.offsetHeight) !== null && _b !== void 0 ? _b : 0,\n        };\n    }, [ref === null || ref === void 0 ? void 0 : ref.offsetHeight, ref === null || ref === void 0 ? void 0 : ref.offsetWidth]);\n    const [size, setSize] = useState(() => {\n        if (initializeWithValue) {\n            return readValue();\n        }\n        return { width: 0, height: 0 };\n    });\n    // Prevent too many rendering using useCallback\n    const handleSize = useCallback(() => {\n        setSize(readValue());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ref === null || ref === void 0 ? void 0 : ref.offsetHeight, ref === null || ref === void 0 ? void 0 : ref.offsetWidth]);\n    // TODO: Prefer incoming useResizeObserver hook\n    useEventListener('resize', handleSize);\n    useIsomorphicLayoutEffect(() => {\n        handleSize();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [ref === null || ref === void 0 ? void 0 : ref.offsetHeight, ref === null || ref === void 0 ? void 0 : ref.offsetWidth]);\n    return [setRef, size];\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { useEffect, useReducer, useRef } from 'react';\n/**\n * Custom hook for making HTTP requests and managing the state of the request.\n * @template T - The type of data expected in the response.\n * @param {string | undefined} url - The URL to make the HTTP request to.\n * @param {RequestInit} [options] - The [options for the HTTP request]() (optional).\n * @returns {State<T>} The state object representing the result of the HTTP request.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-fetch)\n * @see [MDN Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\n * @example\n * const { data, error } = useFetch<User>('https://api.example.com/user');\n */\nexport function useFetch(url, options) {\n    const cache = useRef({});\n    // Used to prevent state update if the component is unmounted\n    const cancelRequest = useRef(false);\n    const initialState = {\n        error: undefined,\n        data: undefined,\n    };\n    // Keep state logic separated\n    const fetchReducer = (state, action) => {\n        switch (action.type) {\n            case 'loading':\n                return Object.assign({}, initialState);\n            case 'fetched':\n                return Object.assign(Object.assign({}, initialState), { data: action.payload });\n            case 'error':\n                return Object.assign(Object.assign({}, initialState), { error: action.payload });\n            default:\n                return state;\n        }\n    };\n    const [state, dispatch] = useReducer(fetchReducer, initialState);\n    useEffect(() => {\n        // Do nothing if the url is not given\n        if (!url)\n            return;\n        cancelRequest.current = false;\n        const fetchData = () => __awaiter(this, void 0, void 0, function* () {\n            dispatch({ type: 'loading' });\n            // If a cache exists for this url, return it\n            if (cache.current[url]) {\n                dispatch({ type: 'fetched', payload: cache.current[url] });\n                return;\n            }\n            try {\n                const response = yield fetch(url, options);\n                if (!response.ok) {\n                    throw new Error(response.statusText);\n                }\n                const data = (yield response.json());\n                cache.current[url] = data;\n                if (cancelRequest.current)\n                    return;\n                dispatch({ type: 'fetched', payload: data });\n            }\n            catch (error) {\n                if (cancelRequest.current)\n                    return;\n                dispatch({ type: 'error', payload: error });\n            }\n        });\n        void fetchData();\n        // Use the cleanup function for avoiding a possibly...\n        // ...state update after the component was unmounted\n        return () => {\n            cancelRequest.current = true;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [url]);\n    return state;\n}\n", "import { useState } from 'react';\nimport { useEventListener } from '../useEventListener';\n/**\n * Custom hook for tracking whether a DOM element is being hovered over.\n * @template T - The type of the DOM element. Defaults to `HTMLElement`.\n * @param {RefObject<T>} elementRef - The ref object for the DOM element to track.\n * @returns {boolean} A boolean value indicating whether the element is being hovered over.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-hover)\n * @example\n * const buttonRef = useRef<HTMLButtonElement>(null);\n * const isHovered = useHover(buttonRef);\n * // Access the isHovered variable to determine if the button is being hovered over.\n */\nexport function useHover(elementRef) {\n    const [value, setValue] = useState(false);\n    const handleMouseEnter = () => {\n        setValue(true);\n    };\n    const handleMouseLeave = () => {\n        setValue(false);\n    };\n    useEventListener('mouseenter', handleMouseEnter, elementRef);\n    useEventListener('mouseleave', handleMouseLeave, elementRef);\n    return value;\n}\n", "import { useState } from 'react';\n/**\n * Custom hook for handling image loading events and providing related CSS styles.\n * @deprecated This hook is deprecated and will be removed in a future release.\n * @returns {ImageOnLoadType} An object containing a function to handle image load events and related CSS styles.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-image-on-load)\n * @example\n * const { handleImageOnLoad, css } = useImageOnLoad();\n * // Use handleImageOnLoad as the onLoad handler for the full-size image.\n * // Apply the CSS styles from the `css` object to control visibility and transitions.\n */\nexport function useImageOnLoad() {\n    const [isLoaded, setIsLoaded] = useState(false);\n    // Triggered when full image will be loaded.\n    const handleImageOnLoad = () => {\n        setIsLoaded(true);\n    };\n    const css = {\n        // Thumbnail style.\n        thumbnail: {\n            visibility: isLoaded ? 'hidden' : 'visible',\n            filter: 'blur(8px)',\n            transition: 'visibility 0ms ease-out 500ms',\n        },\n        // Full image style.\n        fullSize: {\n            opacity: isLoaded ? 1 : 0,\n            transition: 'opacity 500ms ease-in 0ms',\n        },\n    };\n    return { handleImageOnLoad, css };\n}\n", "import { useEffect, useState } from 'react';\n/**\n * Custom hook for tracking the intersection of a DOM element with its containing element or the viewport.\n * @param {RefObject<Element>} elementRef - The ref object for the DOM element to observe.\n * @param {Args} options - The options for the Intersection Observer (optional).\n * @returns {IntersectionObserverEntry | undefined} The intersection observer entry representing the state of the intersection.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-intersection-observer)\n * @see [MDN Intersection Observer API](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API)\n * @example\n * const targetRef = useRef<HTMLDivElement>(null);\n * const options = { threshold: 0.5 };\n * const entry = useIntersectionObserver(targetRef, options);\n * // Access the intersection details from the entry variable.\n */\nexport function useIntersectionObserver(elementRef, { threshold = 0, root = null, rootMargin = '0%', freezeOnceVisible = false, }) {\n    const [entry, setEntry] = useState();\n    const frozen = (entry === null || entry === void 0 ? void 0 : entry.isIntersecting) && freezeOnceVisible;\n    const updateEntry = ([entry]) => {\n        setEntry(entry);\n    };\n    useEffect(() => {\n        const node = elementRef.current; // DOM Ref\n        if (!node)\n            return;\n        const hasIOSupport = !!window.IntersectionObserver;\n        if (!hasIOSupport || frozen)\n            return;\n        const observerParams = { threshold, root, rootMargin };\n        const observer = new IntersectionObserver(updateEntry, observerParams);\n        observer.observe(node);\n        return () => {\n            observer.disconnect();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [elementRef === null || elementRef === void 0 ? void 0 : elementRef.current, JSON.stringify(threshold), root, rootMargin, frozen]);\n    return entry;\n}\n", "import { useEffect, useState } from 'react';\n/**\n * Custom hook for determining if the code is running on the client side (in the browser).\n * @returns {boolean} A boolean value indicating whether the code is running on the client side.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-is-client)\n * @example\n * const isClient = useIsClient();\n * // Use isClient to conditionally render or execute code specific to the client side.\n */\nexport function useIsClient() {\n    const [isClient, setClient] = useState(false);\n    useEffect(() => {\n        setClient(true);\n    }, []);\n    return isClient;\n}\n", "import { useCallback, useEffect, useRef } from 'react';\n/**\n * Custom hook for determining if the component is currently mounted.\n * @returns {() => boolean} A function that returns a boolean value indicating whether the component is mounted.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-is-mounted)\n * @example\n * const isComponentMounted = useIsMounted();\n * // Use isComponentMounted() to check if the component is currently mounted before performing certain actions.\n */\nexport function useIsMounted() {\n    const isMounted = useRef(false);\n    useEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return useCallback(() => isMounted.current, []);\n}\n", "import { useEffect, useState } from 'react';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\n/**\n * Custom hook for locking and unlocking the body scroll to prevent scrolling.\n * @param {?boolean} [initialLocked] - The initial state of body scroll lock (default to `false`).\n * @param {?string} [rootId] - The ID of the root element to calculate scrollbar width (default to `___gatsby` to not introduce breaking change).\n * @returns {[boolean, (locked: boolean) => void]} A tuple containing the current state of body scroll lock and a function to set the state.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-locked-body)\n * @example\n * const [isLocked, setLocked] = useLockedBody(true);\n * // Use isLocked to conditionally apply styles or prevent scrolling.\n * // Use setLocked to dynamically control the body scroll lock state.\n */\nexport function useLockedBody(initialLocked = false, rootId = '___gatsby') {\n    const [locked, setLocked] = useState(initialLocked);\n    // Do the side effect before render\n    useIsomorphicLayoutEffect(() => {\n        if (!locked) {\n            return;\n        }\n        // Save initial body style\n        const originalOverflow = document.body.style.overflow;\n        const originalPaddingRight = document.body.style.paddingRight;\n        // Lock body scroll\n        document.body.style.overflow = 'hidden';\n        // Get the scrollBar width\n        const root = document.getElementById(rootId); // or root\n        const scrollBarWidth = root ? root.offsetWidth - root.scrollWidth : 0;\n        // Avoid width reflow\n        if (scrollBarWidth) {\n            document.body.style.paddingRight = `${scrollBarWidth}px`;\n        }\n        return () => {\n            document.body.style.overflow = originalOverflow;\n            if (scrollBarWidth) {\n                document.body.style.paddingRight = originalPaddingRight;\n            }\n        };\n    }, [locked]);\n    // Update state if initialValue changes\n    useEffect(() => {\n        if (locked !== initialLocked) {\n            setLocked(initialLocked);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [initialLocked]);\n    return [locked, setLocked];\n}\n", "import { useCallback, useState } from 'react';\n/**\n * Custom hook for managing a key-value map state with setter actions.\n * @template K - The type of keys in the map.\n * @template V - The type of values in the map.\n * @param {MapOrEntries<K, V>} [initialState] - The initial state of the map as a Map or an array of key-value pairs (optional).\n * @returns {Return<K, V>} A tuple containing the map state and actions to interact with the map.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-map)\n * @example\n * const [map, mapActions] = useMap();\n * // Access the `map` state and use `mapActions` to set, remove, or reset entries.\n */\nexport function useMap(initialState = new Map()) {\n    const [map, setMap] = useState(new Map(initialState));\n    const actions = {\n        set: useCallback((key, value) => {\n            setMap(prev => {\n                const copy = new Map(prev);\n                copy.set(key, value);\n                return copy;\n            });\n        }, []),\n        setAll: useCallback(entries => {\n            setMap(() => new Map(entries));\n        }, []),\n        remove: useCallback(key => {\n            setMap(prev => {\n                const copy = new Map(prev);\n                copy.delete(key);\n                return copy;\n            });\n        }, []),\n        reset: useCallback(() => {\n            setMap(() => new Map());\n        }, []),\n    };\n    return [map, actions];\n}\n", "import { useEventListener } from '../useEventListener';\n/**\n * Custom hook for handling clicks outside a specified element.\n * @template T - The type of the element's reference.\n * @param {RefObject<T>} ref - The React ref object representing the element to watch for outside clicks.\n * @param {(event: MouseEvent) => void} handler - The callback function to be executed when a click outside the element occurs.\n * @param {'mousedown' | 'mouseup'} [mouseEvent] - The mouse event type to listen for (optional, default is 'mousedown').\n * @returns {void}\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-on-click-outside)\n * @example\n * const containerRef = useRef(null);\n * useOnClickOutside(containerRef, () => {\n *   // Handle clicks outside the container.\n * });\n */\nexport function useOnClickOutside(ref, handler, mouseEvent = 'mousedown') {\n    useEventListener(mouseEvent, event => {\n        const el = ref.current;\n        // Do nothing if clicking ref's element or descendent elements\n        if (!el || el.contains(event.target)) {\n            return;\n        }\n        handler(event);\n    });\n}\n", "import { useCallback, useEffect, useState } from 'react';\nimport { useEventListener } from '../useEventListener';\nconst IS_SERVER = typeof window === 'undefined';\n/**\n * Custom hook for reading a value from local storage, closely related to useLocalStorage().\n * @template T - The type of the stored value.\n * @param {string} key - The key associated with the value in local storage.\n * @param {Options<T>} [options] - Additional options for reading the value (optional).\n * @param {(value: string) => T} [options.deserializer] - Custom deserializer function to convert the stored string value to the desired type (optional).\n * @param {?boolean} [options.initializeWithValue] - If `true` (default), the hook will initialize reading the local storage. In SSR, you should set it to `false`, returning `undefined` initially.\n * @returns {Value<T> | undefined} The stored value, or null if the key is not present or an error occurs.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-read-local-storage)\n * @example\n * const storedData = useReadLocalStorage('myKey');\n * // Access the stored data from local storage.\n */\nexport function useReadLocalStorage(key, options = {}) {\n    let { initializeWithValue = true } = options;\n    if (IS_SERVER) {\n        initializeWithValue = false;\n    }\n    const deserializer = useCallback(value => {\n        if (options.deserializer) {\n            return options.deserializer(value);\n        }\n        // Support 'undefined' as a value\n        if (value === 'undefined') {\n            return undefined;\n        }\n        let parsed;\n        try {\n            parsed = JSON.parse(value);\n        }\n        catch (error) {\n            console.error('Error parsing JSON:', error);\n            return null;\n        }\n        return parsed;\n    }, [options]);\n    // Get from local storage then\n    // parse stored json or return initialValue\n    const readValue = useCallback(() => {\n        // Prevent build error \"window is undefined\" but keep keep working\n        if (IS_SERVER) {\n            return null;\n        }\n        try {\n            const raw = window.localStorage.getItem(key);\n            return raw ? deserializer(raw) : null;\n        }\n        catch (error) {\n            console.warn(`Error reading localStorage key “${key}”:`, error);\n            return null;\n        }\n    }, [key, deserializer]);\n    const [storedValue, setStoredValue] = useState(() => {\n        if (initializeWithValue) {\n            return readValue();\n        }\n        return undefined;\n    });\n    // Listen if localStorage changes\n    useEffect(() => {\n        setStoredValue(readValue());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [key]);\n    const handleStorageChange = useCallback((event) => {\n        if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [key, readValue]);\n    // this only works for other documents, not the current one\n    useEventListener('storage', handleStorageChange);\n    // this is a custom event, triggered in writeValueToLocalStorage\n    // See: useLocalStorage()\n    useEventListener('local-storage', handleStorageChange);\n    return storedValue;\n}\n", "import { useState } from 'react';\nimport { useEventListener } from '../useEventListener';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\nconst IS_SERVER = typeof window === 'undefined';\n/**\n * Custom hook for tracking the screen dimensions and properties.\n * @param {?UseScreenOptions} [options] - The options for customizing the behavior of the hook (optional).\n * @param {?boolean} [options.initializeWithValue] - If `true` (default), the hook will initialize reading the screen dimensions. In SSR, you should set it to `false`, returning `undefined` initially.\n * @returns {Screen | undefined} The current `Screen` object representing the screen dimensions and properties, or `undefined` if not available.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-screen)\n * @example\n * const currentScreen = useScreen();\n * // Access properties of the current screen, such as width and height.\n */\nexport function useScreen(options = {}) {\n    let { initializeWithValue = true } = options;\n    if (IS_SERVER) {\n        initializeWithValue = false;\n    }\n    const [screen, setScreen] = useState(() => {\n        if (initializeWithValue) {\n            return window.screen;\n        }\n        return undefined;\n    });\n    /** Handles the resize event of the window. */\n    function handleSize() {\n        setScreen(window.screen);\n    }\n    // TODO: Prefer incoming useResizeObserver hook\n    useEventListener('resize', handleSize);\n    // Set size at the first client-side load\n    useIsomorphicLayoutEffect(() => {\n        handleSize();\n    }, []);\n    return screen;\n}\n", "import { useEffect, useState } from 'react';\n// Cached script statuses\nconst cachedScriptStatuses = {};\n/**\n * Gets the script element with the specified source URL.\n * @param {string} src - The source URL of the script to get.\n * @returns {{ node: HTMLScriptElement | null, status: UseScriptStatus | undefined }} The script element and its loading status.\n */\nfunction getScriptNode(src) {\n    const node = document.querySelector(`script[src=\"${src}\"]`);\n    const status = node === null || node === void 0 ? void 0 : node.getAttribute('data-status');\n    return {\n        node,\n        status,\n    };\n}\n/**\n * Custom hook for dynamically loading scripts and tracking their loading status.\n * @param {string | null} src - The source URL of the script to load. Set to `null` or omit to prevent loading (optional).\n * @param {UseScriptOptions} [options] - Additional options for controlling script loading (optional).\n * @param {boolean} [options.shouldPreventLoad] - If `true`, prevents the script from being loaded (optional).\n * @param {boolean} [options.removeOnUnmount] - If `true`, removes the script from the DOM when the component unmounts (optional).\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-script)\n * @returns {UseScriptStatus} The status of the script loading, which can be one of 'idle', 'loading', 'ready', or 'error'.\n * @example\n * const scriptStatus = useScript('https://example.com/script.js', { removeOnUnmount: true });\n * // Access the status of the script loading (e.g., 'loading', 'ready', 'error').\n */\nexport function useScript(src, options) {\n    const [status, setStatus] = useState(() => {\n        var _a;\n        if (!src || (options === null || options === void 0 ? void 0 : options.shouldPreventLoad)) {\n            return 'idle';\n        }\n        if (typeof window === 'undefined') {\n            // SSR Handling - always return 'loading'\n            return 'loading';\n        }\n        return (_a = cachedScriptStatuses[src]) !== null && _a !== void 0 ? _a : 'loading';\n    });\n    useEffect(() => {\n        var _a, _b;\n        if (!src || (options === null || options === void 0 ? void 0 : options.shouldPreventLoad)) {\n            return;\n        }\n        const cachedScriptStatus = cachedScriptStatuses[src];\n        if (cachedScriptStatus === 'ready' || cachedScriptStatus === 'error') {\n            // If the script is already cached, set its status immediately\n            setStatus(cachedScriptStatus);\n            return;\n        }\n        // Fetch existing script element by src\n        // It may have been added by another instance of this hook\n        const script = getScriptNode(src);\n        let scriptNode = script.node;\n        if (!scriptNode) {\n            // Create script element and add it to document body\n            scriptNode = document.createElement('script');\n            scriptNode.src = src;\n            scriptNode.async = true;\n            scriptNode.setAttribute('data-status', 'loading');\n            document.body.appendChild(scriptNode);\n            // Store status in attribute on script\n            // This can be read by other instances of this hook\n            const setAttributeFromEvent = (event) => {\n                const scriptStatus = event.type === 'load' ? 'ready' : 'error';\n                scriptNode === null || scriptNode === void 0 ? void 0 : scriptNode.setAttribute('data-status', scriptStatus);\n            };\n            scriptNode.addEventListener('load', setAttributeFromEvent);\n            scriptNode.addEventListener('error', setAttributeFromEvent);\n        }\n        else {\n            // Grab existing script status from attribute and set to state.\n            setStatus((_b = (_a = script.status) !== null && _a !== void 0 ? _a : cachedScriptStatus) !== null && _b !== void 0 ? _b : 'loading');\n        }\n        // Script event handler to update status in state\n        // Note: Even if the script already exists we still need to add\n        // event handlers to update the state for *this* hook instance.\n        const setStateFromEvent = (event) => {\n            const newStatus = event.type === 'load' ? 'ready' : 'error';\n            setStatus(newStatus);\n            cachedScriptStatuses[src] = newStatus;\n        };\n        // Add event listeners\n        scriptNode.addEventListener('load', setStateFromEvent);\n        scriptNode.addEventListener('error', setStateFromEvent);\n        // Remove event listeners on cleanup\n        return () => {\n            if (scriptNode) {\n                scriptNode.removeEventListener('load', setStateFromEvent);\n                scriptNode.removeEventListener('error', setStateFromEvent);\n            }\n            if (scriptNode && (options === null || options === void 0 ? void 0 : options.removeOnUnmount)) {\n                scriptNode.remove();\n            }\n        };\n    }, [src, options === null || options === void 0 ? void 0 : options.shouldPreventLoad, options === null || options === void 0 ? void 0 : options.removeOnUnmount]);\n    return status;\n}\n", "import { useCallback, useEffect, useState, } from 'react';\nimport { useEventCallback } from '../useEventCallback';\nimport { useEventListener } from '../useEventListener';\n// type SetValue<T> = Dispatch<SetStateAction<T>>\nconst IS_SERVER = typeof window === 'undefined';\n/**\n * Custom hook for using session storage to persist state across page reloads.\n * @template T - The type of the state to be stored in session storage.\n * @param {string} key - The key under which the value will be stored in session storage.\n * @param {T | (() => T)} initialValue - The initial value of the state or a function that returns the initial value.\n * @param {?UseSessionStorageOptions<T>} [options] - Options for customizing the behavior of serialization and deserialization (optional).\n * @param {?boolean} [options.initializeWithValue] - If `true` (default), the hook will initialize reading the session storage. In SSR, you should set it to `false`, returning `undefined` initially.\n * @param {(value: T) => string} [options.serializer] - A function to serialize the value before storing it.\n * @returns {[T, Dispatch<SetStateAction<T>>]} A tuple containing the stored value and a function to set the value.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-session-storage)\n * @see [MDN Session Storage](https://developer.mozilla.org/en-US/docs/Web/API/Window/sessionStorage)\n * @example\n * const [count, setCount] = useSessionStorage('count', 0);\n * // Access the `count` value and the `setCount` function to update it.\n */\nexport function useSessionStorage(key, initialValue, options = {}) {\n    let { initializeWithValue = true } = options;\n    if (IS_SERVER) {\n        initializeWithValue = false;\n    }\n    const serializer = useCallback(value => {\n        if (options.serializer) {\n            return options.serializer(value);\n        }\n        return JSON.stringify(value);\n    }, [options]);\n    const deserializer = useCallback(value => {\n        if (options.deserializer) {\n            return options.deserializer(value);\n        }\n        // Support 'undefined' as a value\n        if (value === 'undefined') {\n            return undefined;\n        }\n        const defaultValue = initialValue instanceof Function ? initialValue() : initialValue;\n        let parsed;\n        try {\n            parsed = JSON.parse(value);\n        }\n        catch (error) {\n            console.error('Error parsing JSON:', error);\n            return defaultValue; // Return initialValue if parsing fails\n        }\n        return parsed;\n    }, [options, initialValue]);\n    // Get from session storage then\n    // parse stored json or return initialValue\n    const readValue = useCallback(() => {\n        const initialValueToUse = initialValue instanceof Function ? initialValue() : initialValue;\n        // Prevent build error \"window is undefined\" but keep keep working\n        if (IS_SERVER) {\n            return initialValueToUse;\n        }\n        try {\n            const raw = window.sessionStorage.getItem(key);\n            return raw ? deserializer(raw) : initialValueToUse;\n        }\n        catch (error) {\n            console.warn(`Error reading sessionStorage key “${key}”:`, error);\n            return initialValueToUse;\n        }\n    }, [initialValue, key, deserializer]);\n    const [storedValue, setStoredValue] = useState(() => {\n        if (initializeWithValue) {\n            return readValue();\n        }\n        return undefined;\n    });\n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to sessionStorage.\n    const setValue = useEventCallback(value => {\n        // Prevent build error \"window is undefined\" but keeps working\n        if (IS_SERVER) {\n            console.warn(`Tried setting sessionStorage key “${key}” even though environment is not a client`);\n        }\n        try {\n            // Allow value to be a function so we have the same API as useState\n            const newValue = value instanceof Function ? value(readValue()) : value;\n            // Save to session storage\n            window.sessionStorage.setItem(key, serializer(newValue));\n            // Save state\n            setStoredValue(newValue);\n            // We dispatch a custom event so every similar useSessionStorage hook is notified\n            window.dispatchEvent(new StorageEvent('session-storage', { key }));\n        }\n        catch (error) {\n            console.warn(`Error setting sessionStorage key “${key}”:`, error);\n        }\n    });\n    useEffect(() => {\n        setStoredValue(readValue());\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [key]);\n    const handleStorageChange = useCallback((event) => {\n        if ((event === null || event === void 0 ? void 0 : event.key) && event.key !== key) {\n            return;\n        }\n        setStoredValue(readValue());\n    }, [key, readValue]);\n    // this only works for other documents, not the current one\n    useEventListener('storage', handleStorageChange);\n    // this is a custom event, triggered in writeValueToSessionStorage\n    // See: useSessionStorage()\n    useEventListener('session-storage', handleStorageChange);\n    return [storedValue, setValue];\n}\n", "/**\n * @deprecated useSsr isn't a valid react hook and will be dropped in the next major release. See #258\n * @returns {{ isBrowser: boolean, isServer: boolean }} An object containing the boolean values `isBrowser` and `isServer`.\n * @example\n * const { isBrowser, isServer } = useSsr();\n */\nexport function useSsr() {\n    var _a;\n    const isDOM = \n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    typeof window !== 'undefined' && !!((_a = window === null || window === void 0 ? void 0 : window.document) === null || _a === void 0 ? void 0 : _a.documentElement);\n    return {\n        isBrowser: isDOM,\n        isServer: !isDOM,\n    };\n}\n", "import { useCallback, useMemo, useState } from 'react';\n/**\n * Custom hook for managing and navigating between steps in a multi-step process.\n * @param {number} maxStep - The maximum step in the process.\n * @returns {[number, Helpers]} An tuple containing the current step and helper functions for navigating steps.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-step)\n * @example\n * const [currentStep, { goToNextStep, goToPrevStep, reset, canGoToNextStep, canGoToPrevStep, setStep }] = useStep(3);\n * // Access and use the current step and provided helper functions.\n */\nexport function useStep(maxStep) {\n    const [currentStep, setCurrentStep] = useState(1);\n    const canGoToNextStep = useMemo(() => currentStep + 1 <= maxStep, [currentStep, maxStep]);\n    const canGoToPrevStep = useMemo(() => currentStep - 1 >= 1, [currentStep]);\n    const setStep = useCallback(step => {\n        // Allow value to be a function so we have the same API as useState\n        const newStep = step instanceof Function ? step(currentStep) : step;\n        if (newStep >= 1 && newStep <= maxStep) {\n            setCurrentStep(newStep);\n            return;\n        }\n        throw new Error('Step not valid');\n    }, [maxStep, currentStep]);\n    const goToNextStep = useCallback(() => {\n        if (canGoToNextStep) {\n            setCurrentStep(step => step + 1);\n        }\n    }, [canGoToNextStep]);\n    const goToPrevStep = useCallback(() => {\n        if (canGoToPrevStep) {\n            setCurrentStep(step => step - 1);\n        }\n    }, [canGoToPrevStep]);\n    const reset = useCallback(() => {\n        setCurrentStep(1);\n    }, []);\n    return [\n        currentStep,\n        {\n            goToNextStep,\n            goToPrevStep,\n            canGoToNextStep,\n            canGoToPrevStep,\n            setStep,\n            reset,\n        },\n    ];\n}\n", "import { useLocalStorage } from '../useLocalStorage';\nimport { useMediaQuery } from '../useMediaQuery';\nconst COLOR_SCHEME_QUERY = '(prefers-color-scheme: dark)';\nconst LOCAL_STORAGE_KEY = 'usehooks-ts-ternary-dark-mode';\n/**\n * Custom hook for managing ternary (system, dark, light) dark mode with local storage support.\n * @param {?TernaryDarkModeOptions | string} [options] - Options or the local storage key for the hook.\n * @param {?string} [options.localStorageKey] - The key for storing dark mode preference in local storage (default is `'usehooks-ts-ternary-dark-mode'`).\n * @param {?TernaryDarkMode} [options.defaultValue] - The default value for the dark mode (default is `'system'`).\n * @param {?boolean} [options.initializeWithValue] - If `true` (default), the hook will initialize reading `localStorage`. In SSR, you should set it to `false`, returning `undefined` initially.\n * @returns {ReturnedMethods & Partial<ReturnedValues>} An object containing the dark mode state and helper functions.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-ternary-dark-mode)\n * @example\n * const { isDarkMode, ternaryDarkMode, setTernaryDarkMode, toggleTernaryDarkMode } = useTernaryDarkMode({ defaultValue: 'dark' });\n * // Access and use the dark mode state and provided helper functions.\n */\nexport function useTernaryDarkMode(options) {\n    var _a, _b, _c;\n    // TODO: Refactor this code after the deprecated signature has been removed.\n    const defaultValue = typeof options === 'string' ? 'system' : (_a = options === null || options === void 0 ? void 0 : options.defaultValue) !== null && _a !== void 0 ? _a : 'system';\n    const localStorageKey = typeof options === 'string'\n        ? options\n        : (_b = options === null || options === void 0 ? void 0 : options.localStorageKey) !== null && _b !== void 0 ? _b : LOCAL_STORAGE_KEY;\n    const initializeWithValue = typeof options === 'string'\n        ? undefined\n        : (_c = options === null || options === void 0 ? void 0 : options.initializeWithValue) !== null && _c !== void 0 ? _c : undefined;\n    const isDarkOS = useMediaQuery(COLOR_SCHEME_QUERY);\n    const [mode, setMode] = useLocalStorage(localStorageKey, defaultValue, {\n        initializeWithValue,\n    });\n    const isDarkMode = mode === 'dark' || (mode === 'system' && isDarkOS);\n    const toggleTernaryDarkMode = () => {\n        const modes = ['light', 'system', 'dark'];\n        setMode(prevMode => {\n            return modes[(modes.indexOf(prevMode) + 1) % modes.length];\n        });\n    };\n    return {\n        isDarkMode,\n        ternaryDarkMode: mode,\n        setTernaryDarkMode: setMode,\n        toggleTernaryDarkMode,\n    };\n}\n", "import { useEffect, useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\n/**\n * Custom hook for handling timeouts in React components.\n * @param {() => void} callback - The function to be executed when the timeout elapses.\n * @param {number | null} delay - The duration (in milliseconds) for the timeout. Set to `null` to clear the timeout.\n * @returns {void} This hook does not return anything.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-timeout)\n * @see [MDN setTimeout](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/setTimeout)\n * @example\n * // Usage of useTimeout hook\n * useTimeout(() => {\n *   // Code to be executed after the specified delay\n * }, 1000); // Set a timeout of 1000 milliseconds (1 second)\n */\nexport function useTimeout(callback, delay) {\n    const savedCallback = useRef(callback);\n    // Remember the latest callback if it changes.\n    useIsomorphicLayoutEffect(() => {\n        savedCallback.current = callback;\n    }, [callback]);\n    // Set up the timeout.\n    useEffect(() => {\n        // Don't schedule if no delay is specified.\n        // Note: 0 is a valid value for delay.\n        if (!delay && delay !== 0) {\n            return;\n        }\n        const id = setTimeout(() => {\n            savedCallback.current();\n        }, delay);\n        return () => {\n            clearTimeout(id);\n        };\n    }, [delay]);\n}\n", "import { useCallback, useState } from 'react';\n/**\n * Custom hook for managing a boolean toggle state in React components.\n * @param {boolean} [defaultValue] - The initial value for the toggle state.\n * @returns {[boolean, () => void, Dispatch<SetStateAction<boolean>>]} A tuple containing the current state,\n * a function to toggle the state, and a function to set the state explicitly.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-toggle)\n * @example\n * // Usage of useToggle hook\n * const [isToggled, toggle, setToggle] = useToggle(); // Initial value is false\n * // OR\n * const [isToggled, toggle, setToggle] = useToggle(true); // Initial value is true\n * // Use isToggled in your component, toggle to switch the state, setToggle to set the state explicitly.\n */\nexport function useToggle(defaultValue) {\n    const [value, setValue] = useState(!!defaultValue);\n    const toggle = useCallback(() => {\n        setValue(x => !x);\n    }, []);\n    return [value, toggle, setValue];\n}\n", "import { useState } from 'react';\nimport { useEventListener } from '../useEventListener';\nimport { useIsomorphicLayoutEffect } from '../useIsomorphicLayoutEffect';\nconst IS_SERVER = typeof window === 'undefined';\n/**\n * Custom hook that tracks the size of the window.\n * @param {?UseWindowSizeOptions} [options] - The options for customizing the behavior of the hook (optional).\n * @param {?boolean} [options.initializeWithValue] - If `true` (default), the hook will initialize reading the window size. In SSR, you should set it to `false`, returning `undefined` initially.\n * @returns {object} An object containing the width and height of the window.\n * @property {number} width - The width of the window.\n * @property {number} height - The height of the window.\n * @see [Documentation](https://usehooks-ts.com/react-hook/use-window-size)\n * @example\n * // Usage of useWindowSize hook\n * const { width, height } = useWindowSize();\n * console.log(`Window size: ${width} x ${height}`);\n */\nexport function useWindowSize(options = {}) {\n    let { initializeWithValue = true } = options;\n    if (IS_SERVER) {\n        initializeWithValue = false;\n    }\n    const [windowSize, setWindowSize] = useState(() => {\n        if (initializeWithValue) {\n            return {\n                width: window.innerWidth,\n                height: window.innerHeight,\n            };\n        }\n        return undefined;\n    });\n    const handleSize = () => {\n        setWindowSize({\n            width: window.innerWidth,\n            height: window.innerHeight,\n        });\n    };\n    // TODO: Prefer incoming useResizeObserver hook\n    useEventListener('resize', handleSize);\n    // Set size at the first client-side load\n    useIsomorphicLayoutEffect(() => {\n        handleSize();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return windowSize;\n}\n"],
  "mappings": "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",
  "names": ["debounce", "result", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "IS_SERVER", "query", "import_react", "import_react", "import_react", "import_react", "import_react", "debounce", "import_react", "import_react", "import_react", "import_react", "IS_SERVER", "import_react", "__awaiter", "state", "import_react", "import_react", "import_react", "entry", "import_react", "import_react", "import_react", "import_react", "import_react", "IS_SERVER", "import_react", "IS_SERVER", "import_react", "import_react", "IS_SERVER", "import_react", "COLOR_SCHEME_QUERY", "LOCAL_STORAGE_KEY", "import_react", "import_react", "import_react", "IS_SERVER"]
}
